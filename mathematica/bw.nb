(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     49251,       1078]
NotebookOptionsPosition[     30616,        666]
NotebookOutlinePosition[     49295,       1080]
CellTagsIndexPosition[     49252,       1077]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
    "*", "This", " ", "file", " ", "is", " ", "part", " ", "of", " ", "the", 
     " ", "demodulator", " ", "distribution", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"https", ":"}], "//", 
        RowBox[{
         RowBox[{
          RowBox[{"github", ".", "com"}], "/", "peads"}], "/", 
         "demodulator"}]}], ")"}], "."}], "\n", "*", "Copyright", " ", 
     RowBox[{"(", "c", ")"}], " ", "2023", " ", "Patrick", " ", 
     RowBox[{"Eads", "."}], "\n", "*", "\n", "*", "This", " ", "program", " ",
      "is", " ", "free", " ", 
     RowBox[{"software", ":", 
      RowBox[{"you", " ", "can", " ", "redistribute", " ", "it", " ", 
       RowBox[{"and", "/", "or"}], " ", "modify", "*", "it", " ", "under", 
       " ", "the", " ", "terms", " ", "of", " ", "the", " ", "GNU", " ", 
       "General", " ", "Public", " ", "License", " ", "as", " ", "published", 
       " ", "by", "*", "the", " ", "Free", " ", "Software", " ", 
       "Foundation"}]}]}], ",", 
    RowBox[{
    "version", " ", "3.", "*", "\n", "*", "This", " ", "program", " ", "is", 
     " ", "distributed", " ", "in", " ", "the", " ", "hope", " ", "that", " ",
      "it", " ", "will", " ", "be", " ", "useful"}], ",", 
    RowBox[{
     RowBox[{"but", "*", "WITHOUT", " ", "ANY", " ", "WARRANTY"}], ";", 
     RowBox[{
     "without", " ", "even", " ", "the", " ", "implied", " ", "warranty", " ",
       "of", "*", "MERCHANTABILITY", " ", "or", " ", "FITNESS", " ", "FOR", 
      " ", "A", " ", "PARTICULAR", " ", 
      RowBox[{"PURPOSE", ".", "See"}], " ", "the", " ", "GNU", "*", "General",
       " ", "Public", " ", "License", " ", "for", " ", "more", " ", 
      RowBox[{"details", "."}], "\n", "*", "\n", "*", "You", " ", "should", 
      " ", "have", " ", "received", " ", "a", " ", "copy", " ", "of", " ", 
      "the", " ", "GNU", " ", "General", " ", "Public", " ", "License", "*", 
      "along", " ", "with", " ", "this", " ", 
      RowBox[{"program", ".", "If"}], " ", "not"}]}], ",", 
    RowBox[{
     RowBox[{"see", "<", 
      RowBox[{"http", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"www", ".", "gnu", ".", "org"}], "/", "licenses"}], "/"}], 
      ">", "."}]}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
      RowBox[{"www", ".", "youtube", ".", "com"}], "/", 
      RowBox[{"watch", "?", "v"}]}]}], "=", 
    RowBox[{
     RowBox[{"dmzikG1jZpU", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"and", " ", "its", " ", "follow"}], "-", 
        RowBox[{"on", " ", "episodes"}]}], ")"}], " ", "and", " ", "ISBN", 
      " ", "978"}], "-", 
     RowBox[{
     "0132431712", " ", "were", " ", "super", " ", "helpful", " ", "for", " ",
       "creatinng", " ", "this"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"\[Omega]_", ",", "n_"}], "]"}], ":=", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Omega]", "/", "\[Omega]c"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"2", "n"}], ")"}]}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"H", "[", 
      RowBox[{"\[Omega]_", ",", "n_"}], "]"}], ":=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Omega]", "/", "\[Omega]c"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"2", "*", "n"}], ")"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "/", "I"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], "==", 
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", "Pi", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "k"}]}], ")"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"s", "/", "I"}], ")"}], "==", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"I", " ", "Pi", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "k"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"s", "==", 
    RowBox[{"I", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"I", " ", "Pi", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "k"}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "n"}], ")"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"s", "==", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"Pi", "/", "2"}], " ", "I"}], "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"I", " ", "Pi", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "k"}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "n"}], ")"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"s", "==", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Pi", "/", "2"}], " ", "I"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"I", " ", "Pi", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "k"}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "n"}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"s", "==", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"I", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "k"}], "+", "n"}], ")"}], " ", "Pi"}], 
      RowBox[{"2", " ", "n"}]], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Reduce", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", " ", 
          RowBox[{"z", "/", "I"}], ")"}], 
         RowBox[{
          RowBox[{"-", "2"}], " ", "n"}]], "==", 
        RowBox[{"Exp", "[", 
         RowBox[{"Pi", " ", "I", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "k"}], " ", "-", " ", "1"}], ")"}]}], "]"}]}], "&&", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "|", "k"}], ")"}], "\[Element]", "Integers"}], "&&", 
       RowBox[{"z", "\[Element]", "Complexes"}]}], ",", "z"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"k_", ",", "n_"}], "]"}], ":=", 
     RowBox[{"I", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "+", 
           RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"k", "-", "1"}], ")"}]}]}], ")"}]}], 
        RowBox[{"2", " ", "n"}]], "]"}], " ", "\[Omega]c"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"k", ",", "n"}], "]"}], "/.", 
       RowBox[{"\[Omega]c", "->", "1"}]}], ")"}], "==", 
     RowBox[{"Exp", "[", 
      RowBox[{"Pi", " ", 
       RowBox[{"(", 
        RowBox[{"I", "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "n"}], ")"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "k"}], "+", "n", "-", "1"}], ")"}]}], "]"}]}], 
    "]"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"G", "[", 
      RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "10"}], 
        RowBox[{"Log", "[", 
         RowBox[{"10", ",", 
          RowBox[{"H", "[", 
           RowBox[{"x", ",", "n"}], "]"}]}], "]"}]}], ")"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"Gainx", "/", "10"}], ")"}]}], "-", "1"}], "==", 
      RowBox[{
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"x", ",", "j"}], "]"}], "/", "10"}], ")"}]}], "-", "1"}]}],
      ")"}], "/", "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"Gainy", "/", "10"}], ")"}]}], "-", "1"}], "==", 
      RowBox[{
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"y", ",", "j"}], "]"}], "/", "10"}], ")"}]}], "-", "1"}]}],
      ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["10", 
        RowBox[{"Gy", "/", "10"}]]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["10", 
        RowBox[{"Gx", "/", "10"}]]}], ")"}]}], "==", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["y", "\[Omega]c"], ")"}], "/", 
       RowBox[{"(", 
        FractionBox["x", "\[Omega]c"], ")"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"2", "j"}], ")"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["10", 
           RowBox[{"Gy", "/", "10"}]]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["10", 
           RowBox[{"Gx", "/", "10"}]]}], ")"}]}], "\[Equal]", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["y", "x"], ")"}], 
        RowBox[{"2", " ", "j"}]]}], "&&", 
      RowBox[{"j", "\[Element]", "Integers"}]}], ",", "j"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ordr", "[", 
     RowBox[{"pass_", ",", "stop_", ",", "Gpass_", ",", "Gstop_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["10", 
          RowBox[{
           RowBox[{"-", "Gstop"}], "/", "10"}]]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["10", 
          RowBox[{
           RowBox[{"-", "Gpass"}], "/", "10"}]]}]]}], "]"}], 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", 
        FractionBox["stop", "pass"]}], "]"}]}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "[", 
      RowBox[{"k_", ",", "n_"}], "]"}], ":=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"k", ",", "n"}], "]"}], "/.", 
       RowBox[{"\[Omega]c", "->", "1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ordr", "[", 
     RowBox[{"25000", ",", "32000", ",", 
      RowBox[{"-", "1"}], ",", " ", 
      RowBox[{"-", "27"}]}], "]"}], "//", "N"}], "\[IndentingNewLine]", 
   RowBox[{"m", "=", 
    RowBox[{"Ceiling", "[", "%", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"poles", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"t", "[", 
       RowBox[{"k", ",", "m"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "m"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ReIm", "[", "poles", "]"}], "//", "N"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", "#", "]"}], "&"}], "@", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"#", ",", "4"}], "]"}]}], "&"}], "/@", "%"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"poles2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"Pi", "/", 
         RowBox[{"(", 
          RowBox[{"2", "m"}], ")"}]}], "I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "k"}], "+", "m", "-", "1"}], ")"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "m"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ReIm", "[", "poles2", "]"}], "//", "N"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"ComplexListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"poles", ",", "poles2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"PointSize", "[", "0.03", "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Product", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"S", "^", "2"}], "-", 
         RowBox[{"2", " ", "S", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "k"}], " ", "+", "m", "-", "1"}], ")"}], " ", 
            RowBox[{"Pi", "/", 
             RowBox[{"(", 
              RowBox[{"2", " ", "m"}], ")"}]}]}], "]"}]}], " ", "+", "1"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"m", "/", "2"}]}], "}"}]}], "]"}], "//", 
      RowBox[{"N", "\[IndentingNewLine]", 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"S", "^", "2"}], "-", 
          RowBox[{"2", " ", "S", " ", 
           RowBox[{"Re", "[", 
            RowBox[{"t", "[", 
             RowBox[{"k", ",", "m"}], "]"}], "]"}]}], " ", "+", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"m", "/", "2"}]}], "}"}]}], "]"}]}]}], "//", 
     RowBox[{"N", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Reverse", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"List", "@@", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "&"}], "/@", 
           RowBox[{"List", "@@@", 
            RowBox[{"List", "@@", "%"}]}]}], ")"}]}]}], "]"}]}]}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.907019338423158*^9, 3.9070194028379755`*^9}, {
   3.907019444940028*^9, 3.907019446424758*^9}, {3.907019523752759*^9, 
   3.907019542352848*^9}, {3.9070195922106504`*^9, 3.907019621456355*^9}, {
   3.907045224409359*^9, 3.9070452337054124`*^9}, {3.9070452697409883`*^9, 
   3.9070459802602873`*^9}, {3.9070460134781632`*^9, 
   3.9070460421199894`*^9}, {3.9070460833053727`*^9, 
   3.9070461333250046`*^9}, {3.907046185779582*^9, 3.907046611111559*^9}, {
   3.907046661055582*^9, 3.9070466720531654`*^9}, {3.9070467917228403`*^9, 
   3.9070468358264008`*^9}, {3.907046875116994*^9, 3.9070471230360823`*^9}, {
   3.9070471641835785`*^9, 3.9070472755060673`*^9}, {3.9070473066179523`*^9, 
   3.90704748560131*^9}, {3.907047526035331*^9, 3.9070475848545666`*^9}, {
   3.9070476172298374`*^9, 3.9070477922433577`*^9}, {3.9070478261206493`*^9, 
   3.9070480976495633`*^9}, {3.9070481281910076`*^9, 3.907048610716662*^9}, {
   3.907048646592972*^9, 3.907048746110079*^9}, {3.9070487847570105`*^9, 
   3.907048823175975*^9}, {3.9070488607923007`*^9, 3.907048945894519*^9}, {
   3.9070489842836204`*^9, 3.907049094192831*^9}, {3.907049158931611*^9, 
   3.907049197833177*^9}, {3.907049271665392*^9, 3.9070500869351172`*^9}, {
   3.907050191713723*^9, 3.907050205992429*^9}, {3.9070507978449993`*^9, 
   3.907050815228715*^9}, {3.907050867541583*^9, 3.9070509319670486`*^9}, {
   3.9070509812237744`*^9, 3.907051218496714*^9}, {3.907051271730729*^9, 
   3.9070512721291237`*^9}, {3.9070513141158547`*^9, 3.90705156678211*^9}, {
   3.9070516097166224`*^9, 3.9070519368551793`*^9}, {3.9070519714711037`*^9, 
   3.9070523518080273`*^9}, {3.90705240916231*^9, 3.907052434377239*^9}, {
   3.907052500789564*^9, 3.9070525051365075`*^9}, {3.9070525353659816`*^9, 
   3.9070526719352646`*^9}, {3.9070527043096285`*^9, 3.907053158375354*^9}, {
   3.9070532086132116`*^9, 3.9070532931001787`*^9}, {3.907053333772231*^9, 
   3.907053388316969*^9}, {3.907053586759817*^9, 3.90705361478155*^9}, {
   3.907053697706065*^9, 3.9070537194978204`*^9}, {3.907053755723489*^9, 
   3.907053761274995*^9}, {3.9070538567848363`*^9, 3.9070538725662985`*^9}, {
   3.907054029918827*^9, 3.907054046093973*^9}, {3.907054091610222*^9, 
   3.907054094459329*^9}, {3.9070541269211817`*^9, 3.9070541728459187`*^9}, {
   3.9070543174436507`*^9, 3.907054355085765*^9}, {3.907054390183855*^9, 
   3.90705455516573*^9}, {3.907054585322954*^9, 3.907054643939186*^9}, {
   3.907054687928452*^9, 3.907054767368349*^9}, {3.9070547998412085`*^9, 
   3.907054806601432*^9}, {3.9070548707658224`*^9, 3.9070549291348352`*^9}, 
   3.9070549646019363`*^9, {3.9070550041958437`*^9, 3.907055118807685*^9}, {
   3.907055277315304*^9, 3.907055332059371*^9}, {3.907055407555415*^9, 
   3.907055442450649*^9}, {3.9070555451259613`*^9, 3.907055639314227*^9}, 
   3.9070556697567368`*^9, {3.9070557311144524`*^9, 3.907055768607665*^9}, {
   3.9070558300785637`*^9, 3.9070558348556314`*^9}, {3.907055935612065*^9, 
   3.907055956391303*^9}, {3.9070560018992195`*^9, 3.907056014940012*^9}, {
   3.907056050950229*^9, 3.907056189653207*^9}, {3.9070562301877265`*^9, 
   3.9070562440177402`*^9}, {3.907056286688676*^9, 3.907056296989209*^9}, {
   3.9070563363465743`*^9, 3.907056365646696*^9}, {3.907056405081036*^9, 
   3.9070566323967686`*^9}, {3.9070566684789968`*^9, 
   3.9070568817298784`*^9}, {3.907056923936137*^9, 3.9070570258680067`*^9}, {
   3.9070570751861196`*^9, 3.9070571198032827`*^9}, {3.9070571499928045`*^9, 
   3.9070571820977297`*^9}, {3.907057215412529*^9, 3.9070573190274773`*^9}, {
   3.9070573912681026`*^9, 3.907057629048809*^9}, {3.9070576993592377`*^9, 
   3.907057702749696*^9}, {3.9070578336337934`*^9, 3.9070578575106807`*^9}, 
   3.907057892779386*^9, {3.907057925195382*^9, 3.9070579458025866`*^9}, {
   3.9070583820223083`*^9, 3.9070583830479956`*^9}, {3.9070585356027746`*^9, 
   3.907058540987404*^9}, {3.9070594296486177`*^9, 3.907059432167177*^9}, {
   3.9070594656084847`*^9, 3.9070594817544894`*^9}, 3.907059562974478*^9, {
   3.9070595931047516`*^9, 3.9070596195221567`*^9}, {3.9070597918189716`*^9, 
   3.907059814555015*^9}, {3.907059864023511*^9, 3.907059866180237*^9}, {
   3.9070600433904867`*^9, 3.907060066358186*^9}, {3.9070606462374554`*^9, 
   3.9070606499588995`*^9}, {3.907060690322728*^9, 3.907060745269519*^9}, {
   3.907060791194228*^9, 3.907060810341898*^9}, {3.907060843475066*^9, 
   3.907061041642892*^9}, {3.907061078594554*^9, 3.907061122981841*^9}, {
   3.9070611816505337`*^9, 3.9070612133503876`*^9}, {3.907061253081128*^9, 
   3.9070613105084543`*^9}, {3.907061347858779*^9, 3.907061552776934*^9}, {
   3.9070615833324137`*^9, 3.9070616767214994`*^9}, {3.9070617229916315`*^9, 
   3.907061759339471*^9}, {3.907061801521373*^9, 3.907062039791416*^9}, 
   3.9070620796589956`*^9, {3.90706212262554*^9, 3.9070621409999385`*^9}, {
   3.9070621771322484`*^9, 3.907062202274098*^9}, {3.9070622657914405`*^9, 
   3.907062278752918*^9}, {3.9070623284038486`*^9, 3.907062340110947*^9}, {
   3.9070623942214346`*^9, 3.907062396883746*^9}, {3.907062428093395*^9, 
   3.907062434061381*^9}, {3.9070624766436987`*^9, 3.907062497438489*^9}, {
   3.9070625377948914`*^9, 3.9070626159987288`*^9}, {3.907062677495448*^9, 
   3.9070626785109997`*^9}, {3.9070627187647915`*^9, 
   3.9070627396843014`*^9}, {3.90706277807874*^9, 3.9070627794845295`*^9}, {
   3.9070628158559732`*^9, 3.9070628159296665`*^9}, {3.907062848980024*^9, 
   3.9070628517251983`*^9}, {3.9070629544492955`*^9, 
   3.9070630015907593`*^9}, {3.907063115432723*^9, 3.907063118812925*^9}, {
   3.9070631504948025`*^9, 3.907063156623391*^9}, {3.9070632120383234`*^9, 
   3.9070632121837883`*^9}, 3.907063300403581*^9, {3.9070633481463623`*^9, 
   3.9070633571120405`*^9}, {3.907063391566931*^9, 3.9070633972597446`*^9}, {
   3.907063436193405*^9, 3.9070634433895383`*^9}, {3.90706350090626*^9, 
   3.907063825273796*^9}, {3.907063871947065*^9, 3.9070638843866067`*^9}, {
   3.90706392249726*^9, 3.907063976120316*^9}, {3.907064036709577*^9, 
   3.907064060307936*^9}, {3.9070641051030207`*^9, 3.9070642351122046`*^9}, {
   3.907064272480736*^9, 3.9070642731721563`*^9}, {3.9070643145735893`*^9, 
   3.9070645205065885`*^9}, {3.9070645518951497`*^9, 
   3.9070646324050736`*^9}, {3.9070646717416787`*^9, 
   3.9070647517163687`*^9}, {3.907064786796139*^9, 3.9070648449484825`*^9}, {
   3.907065033738959*^9, 3.9070650609801297`*^9}, {3.9070667121980247`*^9, 
   3.9070668152141895`*^9}, {3.9070668687953405`*^9, 3.907066966453806*^9}, {
   3.907067010372215*^9, 3.907067094816718*^9}, {3.9070674084579487`*^9, 
   3.9070674164988403`*^9}, {3.9070674608886523`*^9, 
   3.9070675335876827`*^9}, {3.9070676157548313`*^9, 
   3.9070676536694965`*^9}, {3.907067739256359*^9, 3.907067739499806*^9}, {
   3.907067774011544*^9, 3.9070678570193205`*^9}, {3.907067902328333*^9, 
   3.907067925195162*^9}, {3.907067958038264*^9, 3.9070680036229753`*^9}, {
   3.9070680710001698`*^9, 3.907068097153458*^9}, {3.9070681430928125`*^9, 
   3.907068375379223*^9}, {3.9070684529662867`*^9, 3.9070684792647038`*^9}, {
   3.9070685195374393`*^9, 3.9070685827060976`*^9}, {3.9070686397513666`*^9, 
   3.9070689783458347`*^9}, {3.9070690148766193`*^9, 3.907069037241193*^9}, {
   3.9070691134974337`*^9, 3.9070692669914885`*^9}, {3.907069298541545*^9, 
   3.907069367367724*^9}, {3.907069404087188*^9, 3.9070694330509715`*^9}, {
   3.9070695160687113`*^9, 3.9070695387241354`*^9}, {3.907069614264228*^9, 
   3.907069793738222*^9}, {3.907069824793881*^9, 3.907070303714466*^9}, {
   3.9070704155577326`*^9, 3.9070704313935833`*^9}, {3.9070704763291326`*^9, 
   3.907070592058324*^9}, {3.9070706264587717`*^9, 3.907071278663418*^9}, {
   3.907071357678671*^9, 3.907071563106515*^9}, {3.9070716158859415`*^9, 
   3.907071932744137*^9}, {3.907072001149027*^9, 3.907072016342504*^9}, {
   3.9070720492733116`*^9, 3.9070726563176813`*^9}, {3.907072686345909*^9, 
   3.907072850722885*^9}, {3.9070728812137337`*^9, 3.907073251506445*^9}, {
   3.907073284553993*^9, 3.9070732894340973`*^9}, {3.9070733365837665`*^9, 
   3.9070734142272186`*^9}, {3.907073446283155*^9, 3.9070735319721937`*^9}, {
   3.9070735642659836`*^9, 3.9070735796149435`*^9}, {3.907073646240393*^9, 
   3.907073707126134*^9}, {3.9070738321554246`*^9, 3.9070740380673323`*^9}, {
   3.9070740989807253`*^9, 3.907074139191896*^9}, {3.9070741829788823`*^9, 
   3.907074185555602*^9}, {3.907074225737522*^9, 3.907074341624641*^9}, {
   3.907074381940663*^9, 3.907074383088459*^9}, {3.90707457321235*^9, 
   3.9070746608673067`*^9}, {3.907074708999516*^9, 3.9070747928315506`*^9}, {
   3.907074825850418*^9, 3.90707491130739*^9}, {3.907075138799883*^9, 
   3.907075140709698*^9}, {3.907075261936517*^9, 3.907075312366001*^9}, {
   3.9070753446832285`*^9, 3.9070753454680767`*^9}, {3.907075377228731*^9, 
   3.907075426043785*^9}, {3.9070754640124493`*^9, 3.9070755956923513`*^9}, 
   3.907075638058758*^9, {3.907075694734442*^9, 3.907075728103841*^9}, {
   3.907075801635724*^9, 3.9070758405883193`*^9}, 3.907075913182453*^9, {
   3.9070760526591454`*^9, 3.907076140227867*^9}, {3.907076185600015*^9, 
   3.9070763099783225`*^9}, {3.907076346709974*^9, 3.907076382273475*^9}, {
   3.907076440752754*^9, 3.907076443222009*^9}, {3.9070765346770372`*^9, 
   3.9070766037068725`*^9}, {3.9070767343820643`*^9, 
   3.9070767344636745`*^9}, {3.9070768643702927`*^9, 
   3.9070771079454412`*^9}, {3.907077190645379*^9, 3.9070771923368406`*^9}, {
   3.9070772493880177`*^9, 3.907077268404252*^9}, {3.9070773445600967`*^9, 
   3.907077372179413*^9}, {3.9070774034817405`*^9, 3.9070775339862566`*^9}, {
   3.9070775860312395`*^9, 3.907077611687681*^9}, {3.9070776506488743`*^9, 
   3.9070776632763224`*^9}, {3.907077732697682*^9, 3.9070777419633045`*^9}, {
   3.907077776257628*^9, 3.907078041917782*^9}, {3.9070780961726456`*^9, 
   3.907078297679343*^9}, {3.907078330399486*^9, 3.9070784024473047`*^9}, {
   3.907078457293848*^9, 3.907078507340607*^9}, {3.9070785382473526`*^9, 
   3.90707858213455*^9}, {3.90707862303429*^9, 3.9070788250226035`*^9}, {
   3.907079376070772*^9, 3.9070802703218117`*^9}, {3.9070803052854333`*^9, 
   3.907080306740635*^9}, {3.9070803854556556`*^9, 3.9070804079227004`*^9}, {
   3.907080444480121*^9, 3.9070804614330034`*^9}, {3.9070805055941973`*^9, 
   3.907080524296089*^9}, 3.9070843366461306`*^9, {3.9070844107815943`*^9, 
   3.9070844663521843`*^9}, {3.907084513783098*^9, 3.9070845233638487`*^9}, {
   3.907084589498068*^9, 3.9070846164853477`*^9}, {3.9070846769867735`*^9, 
   3.907084841495848*^9}, {3.907084896134862*^9, 3.907084956580763*^9}, {
   3.9070849960554457`*^9, 3.907085268962621*^9}, {3.9070853042358775`*^9, 
   3.907085355887622*^9}, {3.9070854034412155`*^9, 3.907085416637295*^9}, {
   3.9070854646160693`*^9, 3.9070854943780727`*^9}, {3.9070855412233377`*^9, 
   3.9070855414429855`*^9}, {3.907085636527326*^9, 3.9070856368789515`*^9}, {
   3.907085687400552*^9, 3.9070857799323225`*^9}, {3.90708581599647*^9, 
   3.907085925463026*^9}, {3.907085996976075*^9, 3.907086046933568*^9}, {
   3.907086081986414*^9, 3.907086329877859*^9}, {3.9070863625254345`*^9, 
   3.9070863910253334`*^9}, {3.907086458384328*^9, 3.907086737483666*^9}, {
   3.907086810543731*^9, 3.907086951045864*^9}, {3.9070869814581456`*^9, 
   3.907087181206567*^9}, {3.9070872167604885`*^9, 3.9070872434959793`*^9}, {
   3.907087284910834*^9, 3.9070872860034075`*^9}, {3.9070873161201363`*^9, 
   3.9070873395170517`*^9}, {3.907087404179891*^9, 3.907087471835285*^9}, {
   3.9070875044750443`*^9, 3.9070876456212225`*^9}, {3.9070876851941137`*^9, 
   3.9070877236065083`*^9}, {3.907087961710666*^9, 3.9070881086422157`*^9}, {
   3.9070881561800394`*^9, 3.9070881843456106`*^9}, 3.9070883125985622`*^9, {
   3.9070883542208376`*^9, 3.90708837920471*^9}, {3.907088448507513*^9, 
   3.9070884551047864`*^9}, 3.9070885449508247`*^9, {3.9070885810859275`*^9, 
   3.907088651862956*^9}, 3.907089042629367*^9, {3.9070890816275616`*^9, 
   3.9070890887599225`*^9}, {3.9070891440452433`*^9, 3.907089178282219*^9}, {
   3.907089383246784*^9, 3.9070894363211217`*^9}, 3.9070895316388288`*^9, {
   3.907089577495775*^9, 3.9070897219743805`*^9}, {3.9070932993401427`*^9, 
   3.9070932994456825`*^9}, {3.9070942033720293`*^9, 
   3.9070942920780563`*^9}, {3.907094556718664*^9, 3.907094612505481*^9}, {
   3.907097083739792*^9, 3.907097094791297*^9}, {3.9071004980728426`*^9, 
   3.9071005357843513`*^9}, {3.907102703261465*^9, 3.907102741828391*^9}, {
   3.9073162917626667`*^9, 3.907316357304183*^9}, {3.907316402145199*^9, 
   3.9073164578669825`*^9}, {3.907316503986025*^9, 3.907316575352518*^9}, 
   3.907316621601796*^9, {3.9073166877460475`*^9, 3.9073166951344223`*^9}, {
   3.907316738361034*^9, 3.907316785080922*^9}, {3.907316821295311*^9, 
   3.9073168367130537`*^9}, {3.9073168692769995`*^9, 3.907316870579976*^9}, {
   3.9073169138043504`*^9, 3.9073169784679575`*^9}, {3.907317031774026*^9, 
   3.9073170888723693`*^9}, {3.907317155106925*^9, 3.907317164058433*^9}, {
   3.907317203100263*^9, 3.9073172478812027`*^9}, {3.9073173256865864`*^9, 
   3.907317361782379*^9}, {3.9073174026778264`*^9, 3.9073177823857775`*^9}, {
   3.9073178638891554`*^9, 3.907317866536717*^9}, {3.9073179308379216`*^9, 
   3.907317976863411*^9}, {3.9073180436521497`*^9, 3.9073180811437426`*^9}, {
   3.9073181300125923`*^9, 3.9073181321197968`*^9}, {3.907318190207326*^9, 
   3.907318206879776*^9}, {3.907318782933618*^9, 3.907318850898912*^9}, {
   3.907340082328106*^9, 3.9073400858868833`*^9}, 3.9073401182001257`*^9, 
   3.907340154308341*^9, {3.9073402016051645`*^9, 3.9073402295925255`*^9}, 
   3.9073406068608613`*^9, 3.907345791290881*^9, {3.907345826901888*^9, 
   3.907345831568756*^9}, 3.9073460031496677`*^9, {3.9075806633891*^9, 
   3.90758076657306*^9}, 3.9075808081571918`*^9, {3.9075813421918726`*^9, 
   3.9075814365463324`*^9}, {3.907581491309014*^9, 3.907581544616006*^9}, {
   3.9075819702278676`*^9, 3.9075820329982653`*^9}, {3.907582111668703*^9, 
   3.907582219534688*^9}, {3.907582268970249*^9, 3.907582306263273*^9}, {
   3.90758235384035*^9, 3.907582362040661*^9}, {3.9075823972837243`*^9, 
   3.9075824167396126`*^9}, {3.9075824726948147`*^9, 3.907582484094141*^9}, {
   3.907593799214813*^9, 3.9075938487802095`*^9}, {3.9075939197909594`*^9, 
   3.9075939411786137`*^9}, {3.907594842952155*^9, 3.907594918196256*^9}, {
   3.907614162865075*^9, 3.907614185379871*^9}, {3.907614796682027*^9, 
   3.9076149057121553`*^9}, {3.9076149619827642`*^9, 
   3.9076150707710867`*^9}, {3.907615106525939*^9, 3.907615125581526*^9}, {
   3.9076151781882114`*^9, 3.907615236310129*^9}, {3.9076173215507073`*^9, 
   3.9076173644272814`*^9}, {3.907617416023416*^9, 3.9076174209008446`*^9}, {
   3.9076228652389174`*^9, 3.907622908075154*^9}, {3.9076229631572604`*^9, 
   3.9076229708617325`*^9}, {3.9076230025431786`*^9, 
   3.9076230038073683`*^9}, {3.9076230482356796`*^9, 3.907623075993617*^9}, {
   3.9076231376254716`*^9, 3.907623219535268*^9}, 3.9076233522739744`*^9, {
   3.9076236596487994`*^9, 
   3.9076237157248125`*^9}},ExpressionUUID->"0ab73e5f-5eb0-4606-93ea-\
1dcca275551c"]
},
WindowSize->{1142.25, 653.625},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["DarkStyle for Notebooks", "Title"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Tongue menu cells", "Section"], 
         Cell[
          StyleData[
          "WolframAlphaShort", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "WolframAlphaLong", "Backspace" -> "Input"}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          EvaluationMode -> "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]], 
              CellBaseline -> Baseline], None}, {None, None}}, ShowCodeAssist -> 
          False, FormatType -> TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData["WolframAlphaFullOutput"], 
          CellMargins -> {{20, 10}, {Inherited, Inherited}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> 1, 
             CellMargins -> {{66, 10}, {8, 8}}, 
             StyleKeyMapping -> {"Backspace" -> "Input"}, Evaluatable -> True,
              EvaluationMode -> "ExternalLanguage", CellGroupingRules -> 
             "InputGrouping", StripStyleOnPaste -> True, 
             CellEvaluationLanguage -> "Python", 
             CellFrameMargins -> {{4, 8}, {8, 8}}, CellFrameColor -> 
             RGBColor[0.2549, 0.23137, 0.42549], CellFrameLabels -> {{
                Cell[
                 BoxData[
                  DynamicBox[
                   ToBoxes[
                   ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged; 
                    FrontEnd`Private`MakeExternalLanguageMenu[
                    ExternalEvaluate`FE`GetDefaultCellEvaluationLanguage[], 
                    ExternalEvaluate`FE`GetExternalLanguageMenuData[]], 
                    StandardForm], 
                   TrackedSymbols :> {
                    ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged}, 
                   ImageSizeCache -> {
                    35., {10.64208984375, 17.35791015625}}]], "Output", 
                 Background -> None, CellFrame -> 0], None}, {None, None}}, 
             CellFrameLabelMargins -> 0, AllowInlineCells -> False, 
             Hyphenation -> False, AutoQuoteCharacters -> {}, 
             PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, MenuSortingValue -> 1800, FontFamily -> Dynamic[
               CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
             FontColor -> GrayLevel[0.97], Background -> 
             RGBColor[0.18, 0.172, 0.22]], 
            Cell[
             StyleData["ExternalLanguage", "Presentation"], 
             CellMargins -> {{101, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], ShowGroupOpener -> 
             False, CellMargins -> {{110, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "Printout"], 
             CellMargins -> {{48, 10}, {8, 8}}, 
             CellFrameMargins -> {{2, 8}, {8, 8}}]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook options settings", "Section"], 
         Cell[
          StyleData[All, "Working"], InitializationCellEvaluation -> False, 
          DockedCells -> None, DefaultNewCellStyle -> "Code", 
          ShowPredictiveInterface -> False], 
         Cell[
          StyleData["Notebook"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0., 0.8, 1], "HoverColor" -> 
            RGBColor[0.78, 0.64, 1], "Thickness" -> 1.3, "Widths" -> {2, 8}}, 
          StyleKeyMapping -> {
           "==" -> "WolframAlphaLong", "Backspace" -> "WolframAlphaShort", 
            "=" -> "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguage", "Backspace" -> "Code"}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> RGBColor[0.89, 0.56, 1., 0.95], ShowAutoStyles -> 
              False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
              False}, "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 1.]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0., 0.8200000000000001, 0.32]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {
             FontColor -> 
              RGBColor[
               0.16470588235294117`, 0.6313725490196078, 0.596078431372549]}, 
            "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.11, 1., 0.08], FontSlant -> "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.98, 0.71, 0.], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "UndefinedSymbolStyle" -> {FontColor -> RGBColor[0.42, 0.94, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "AutoConvertEnable" -> False, 
            "HeadHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}, "MatchHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}}, TranslationOptions -> {"Language" -> None}, FontColor -> 
          RGBColor[0, 0.7, 1], Background -> GrayLevel[0.15]], 
         Cell[
          StyleData["DialogStyle"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["NotebookObject"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["LinguisticAssistant"], FontColor -> 
          RGBColor[0, 0.7, 1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          StyleData["Title"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Chapter"], FontColor -> RGBColor[0.8, 0.8, 0.8]], 
         Cell[
          StyleData["Subchapter"], FontColor -> RGBColor[0.65, 0.05, 0.65]], 
         Cell[
          StyleData["Subtitle"], FontColor -> 
          RGBColor[0.196078, 0.694118, 0.862745]], 
         Cell[
          StyleData["Subsubtitle"], FontColor -> 
          RGBColor[0.196078, 0.394118, 0.562745]], 
         Cell[
          StyleData["Subsubtitle"]], 
         Cell[
          StyleData["Section"], FontColor -> 
          RGBColor[
           0.1399099717708095, 0.5224231326771954, 0.6501869230182346]], 
         Cell[
          StyleData["Subsection"], FontColor -> GrayLevel[0.749996]], 
         Cell[
          StyleData["Subsubsection"], FontColor -> 
          RGBColor[0.823529, 0.490654, 0.202274]], 
         Cell[
          StyleData["Subsubsubsection"], FontColor -> 
          RGBColor[0.954147, 0.694224, 0.124651]], 
         Cell[
          StyleData["Subsubsubsubsection"], FontColor -> 
          RGBColor[0.913237, 0.365469, 0.0854353]], 
         Cell[
          StyleData["Text"], FontFamily -> "Gill Sans Light", FontSize -> 14, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.683803]], 
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0, 0.7, 1]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15], 
         Cell[
          StyleData["ItemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubsubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          CellGroupData[{
            Cell["Chapter", "Subsection"], 
            Cell[
             StyleData["Chapter"], CounterIncrements -> "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1150, 
             MenuCommandKey :> "2"], 
            Cell[
             StyleData["Subchapter"], CellDingbat -> 
             StyleBox["\[MathematicaIcon]", Alignment -> Baseline, 
               RGBColor[0., 0.043, 0.9]], CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1200, 
             MenuCommandKey :> "3"]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input and Output cells", "Section"], 
         Cell[
          StyleData["Code"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontWeight -> Plain, FontColor -> GrayLevel[1], 
          Background -> GrayLevel[0.1]], 
         Cell[
          StyleData["InitializationCell"], 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameLabelMargins -> -5,
           FontColor -> GrayLevel[1], Background -> GrayLevel[0.25]], 
         Cell[
          StyleData["Input"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["Output"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontSize -> 13], 
         Cell[
          StyleData["Message"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          RGBColor[
           0.704600595101854, 0.24277103837644007`, 0.22278171969176777`]], 
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          GrayLevel[0.3]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["misc", "Section"], 
         Cell[
          StyleData["InformationCell"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.760174, 0.600641, 0.675288]}, FontColor -> 
          GrayLevel[0.3]], 
         Cell[
          StyleData["InformationLink"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["InformationLinkLF"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Formulas and Programming", "Section"], 
         Cell[
          StyleData["DisplayFormula"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["DisplayFormulaNumbered"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["Program"], CellFrameColor -> GrayLevel[0.4]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{"Styles for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " System\[Hyphen]specific Elements"}], "Section", 
          CellChangeTimes -> {{3.601920784160323*^9, 3.60192078489342*^9}, 
            3.60356525124664*^9, {3.6037117681643677`*^9, 
            3.6037117683195887`*^9}}], 
         Cell[
          CellGroupData[{
            Cell["FormatType Styles", "Subsection"], 
            Cell[
             StyleData["StandardForm"]], 
            Cell[
             StyleData["CellExpression"], FontColor -> GrayLevel[0], 
             Background -> GrayLevel[0.75]], 
            Cell[
             StyleData["CellLabel"], FontSize -> 9, FontColor -> 
             RGBColor[0.603861, 0.615915, 0.607843]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Graphics Styles", "Subsection", 
             CellChangeTimes -> {{3.603565272271762*^9, 
              3.603565284491351*^9}}], 
            Cell[
             StyleData["GraphicsAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["GraphicsFrame"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["Graphics3DAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Arial", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]]}, 
           Open]]}, Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "13.3 for Microsoft Windows (64-bit) (July 24, 2023)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"4078cc5e-f625-486b-ba97-75c916e36b24"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 30054, 644, 1378, "Input",ExpressionUUID->"0ab73e5f-5eb0-4606-93ea-1dcca275551c"]
}
]
*)

